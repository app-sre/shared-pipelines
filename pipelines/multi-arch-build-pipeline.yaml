# Single arch build (amd64)
# Note, that we keep the multi-arch filename because we dont want to change refs in all repos
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: single-arch-build-pipeline
spec:
  finally:
  - name: show-sbom
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: show-sbom
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:86c069cac0a669797e8049faa8aa4088e70ff7fcd579d5bdc37626a9e0488a05
      - name: kind
        value: task
      resolver: bundles
  - name: show-summary
    params:
    - name: pipelinerun-name
      value: $(context.pipelineRun.name)
    - name: git-url
      value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
    - name: image-url
      value: $(params.output-image)
    - name: build-task-status
      value: $(tasks.build-image-index.status)
    taskRef:
      params:
      - name: name
        value: summary
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:3f6e8513cbd70f0416eb6c6f2766973a754778526125ff33d8e3633def917091
      - name: kind
        value: task
      resolver: bundles
    workspaces:
    - name: workspace
      workspace: workspace
  params:
  - default: ""
    description: Specify which stage to build in a multi-stage Dockerfile.
    name: target-stage
    type: string
  - description: Source Repository URL
    name: git-url
    type: string
  - default: ""
    description: Revision of the Source Repository
    name: revision
    type: string
  - description: Fully Qualified Output Image
    name: output-image
    type: string
  - default: .
    description: Path to the source code of an application's component from where to build image.
    name: path-context
    type: string
  - default: Dockerfile
    description: Path to the Dockerfile inside the context specified by parameter path-context
    name: dockerfile
    type: string
  - default: "false"
    description: Force rebuild image
    name: rebuild
    type: string
  - default: "false"
    description: Skip checks against built image
    name: skip-checks
    type: string
  - default: "false"
    description: Execute the build with network isolation
    name: hermetic
    type: string
  - default: ""
    description: Build dependencies to be prefetched by Cachi2
    name: prefetch-input
    type: string
  - default: ""
    description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
    name: image-expires-after
  - default: "false"
    description: Build a source image.
    name: build-source-image
    type: string
  - default: "false"
    description: Add built image into an OCI image index
    name: build-image-index
    type: string
  - default: []
    description: Array of --build-arg values ("arg=value" strings) for buildah
    name: build-args
    type: array
  - default: ""
    description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
    name: build-args-file
    type: string
  - default: "does-not-exist"
    description: Name of a secret which will be made available to the build with 'buildah build --secret' at /run/secrets/$ADDITIONAL_SECRET
    name: additional_secret
    type: string
  - default: "false"
    # https://github.com/konflux-ci/build-definitions/tree/main/task/git-clone/0.1
    description: Fetch all tags for the repo.
    name: fetchTags
    type: string
  - default: "1"
    # https://github.com/konflux-ci/build-definitions/tree/main/task/git-clone/0.1
    description: Perform a shallow clone, fetching only the most recent N commits.
    name: cloneDepth
    type: string
  - default: ""
    description: Script to run in ephemeral namespace. If empty, ephemeral namespace tasks are skipped.
    name: ephemeral-namespace-run-script
    type: string
  # https://catalog.redhat.com/software/containers/openshift4/ose-cli/5cd9ba3f5a13467289f4d51d/history?architecture=amd64
  - default: "v4.15"
    description: Tag of the OpenShift CLI from registry.redhat.io/openshift4/ose-cli to use for ephemeral namespace tasks.
    name: ephemeral-namespace-oc-cli-version
    type: string
  - default: ""
    description: Path to a file with goss tests for container structure test.
    name: goss-container-structure-test-file
    type: string
  - default: "/bin/sh"
    description: Path to the shell in container to use for ephemeral tasks.
    name: container-shell-path
    type: string
  - default: "30s"
    description: Timeout for pod under-test to be ready in ephemeral environment tests.
    name: ephemeral-pod-wait-timeout
    type: string
  results:
  - description: ""
    name: IMAGE_URL
    value: $(tasks.build-image-index.results.IMAGE_URL)
  - description: ""
    name: IMAGE_DIGEST
    value: $(tasks.build-image-index.results.IMAGE_DIGEST)
  - description: ""
    name: CHAINS-GIT_URL
    value: $(tasks.clone-repository.results.url)
  - description: ""
    name: CHAINS-GIT_COMMIT
    value: $(tasks.clone-repository.results.commit)
  tasks:
  - name: init
    params:
    - name: image-url
      value: $(params.output-image)
    - name: rebuild
      value: $(params.rebuild)
    - name: skip-checks
      value: $(params.skip-checks)
    taskRef:
      params:
      - name: name
        value: init
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:1d8221c84f91b923d89de50bf16481ea729e3b68ea04a9a7cbe8485ddbb27ee6
      - name: kind
        value: task
      resolver: bundles
  - name: clone-repository
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
        # https://github.com/konflux-ci/build-definitions/tree/main/task/git-clone/0.1
    - name: fetchTags
      value: $(params.fetchTags)
    - name: depth
      value: $(params.cloneDepth)
    runAfter:
    - init
    taskRef:
      params:
      - name: name
        value: git-clone
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:7939000e2f92fc8b5d2c4ee4ba9000433c5aa7700d2915a1d4763853d5fd1fd4
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    workspaces:
    - name: output
      workspace: workspace
    - name: basic-auth
      workspace: git-auth
  - name: prefetch-dependencies
    params:
    - name: input
      value: $(params.prefetch-input)
    runAfter:
    - clone-repository
    taskRef:
      params:
      - name: name
        value: prefetch-dependencies
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.2@sha256:848f4d5e592d6c145ba3575f52b88d65be95ad6fbba108b24ff79d766cf5d45d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.prefetch-input)
      operator: notin
      values:
      - ""
    workspaces:
    - name: source
      workspace: workspace
    - name: git-basic-auth
      workspace: git-auth
    - name: netrc
      workspace: netrc
  - name: build-container
    params:
    - name: IMAGE
      value: $(params.output-image)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    - name: HERMETIC
      value: $(params.hermetic)
    - name: TARGET_STAGE
      value: $(params.target-stage)
    - name: PREFETCH_INPUT
      value: $(params.prefetch-input)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: BUILD_ARGS
      value:
      - $(params.build-args[*])
    - name: BUILD_ARGS_FILE
      value: $(params.build-args-file)
    - name: ADDITIONAL_SECRET
      value: $(params.additional_secret)
    runAfter:
    - prefetch-dependencies
    taskRef:
      params:
      - name: name
        value: buildah
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.4@sha256:9d7d4724cd2fac84ca1b246eedf51d34f4f0a6d34c4a5b2f9bb614a0f293f38d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    workspaces:
    - name: source
      workspace: workspace
  - name: build-image-index
    params:
    - name: IMAGE
      value: $(params.output-image)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: ALWAYS_BUILD_INDEX
      value: $(params.build-image-index)
    - name: IMAGES
      value:
      - $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: build-image-index
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:3499772af90aad0d3935629be6d37dd9292195fb629e6f43ec839c7f545a0faa
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
  - name: build-source-image
    params:
    - name: BINARY_IMAGE
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: BINARY_IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: source-build
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.3@sha256:1fdda7563f21340d6243c8738934a58adffd8253706b423d1c4ec5e26ba5fae0
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    - input: $(params.build-source-image)
      operator: in
      values:
      - "true"
    workspaces:
    - name: workspace
      workspace: workspace
  - name: deprecated-base-image-check
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: deprecated-image-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:3c8b81fa868e27c6266e7660a4bfb4c822846dcf4304606e71e20893b0d3e515
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: clair-scan
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: clair-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:417f44117f8d87a4a62fea6589b5746612ac61640b454dbd88f74892380411f2
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: ecosystem-cert-preflight-checks
    params:
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: ecosystem-cert-preflight-checks
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.2@sha256:f99d2bdb02f13223d494077a2cde31418d09369f33c02134a8e7e5fad2f61eda
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: sast-snyk-check
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: sast-snyk-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.4@sha256:351f2dce893159b703e9b6d430a2450b3df9967cb9bd3adb46852df8ccfe4c0d
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    workspaces:
    - name: workspace
      workspace: workspace
  - name: sast-shell-check
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: sast-shell-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sast-shell-check:0.1@sha256:4a63982791a1a68f560c486f524ef5b9fdbeee0c16fe079eee3181a2cfd1c1bf
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    workspaces:
    - name: workspace
      workspace: workspace
  - name: sast-unicode-check
    params:
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: sast-unicode-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check:0.3@sha256:bec18fa5e82e801c3f267f29bf94535a5024e72476f2b27cca7271d506abb5ad
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    workspaces:
    - name: workspace
      workspace: workspace
  - name: clamav-scan
    params:
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: clamav-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.2@sha256:7749146f7e4fe530846f1b15c9366178ec9f44776ef1922a60d3e7e2b8c6426b
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: apply-tags
    params:
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: apply-tags
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.2@sha256:517a51e260c0b59654a9d7b842e1ab07d76bce15ca7ce9c8fd2489a19be6463d
      - name: kind
        value: task
      resolver: bundles
  - name: push-dockerfile
    params:
    - name: IMAGE
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: push-dockerfile
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-push-dockerfile:0.1@sha256:794850ad7934523d511ebd4e3ec16f1a811a2fa8729580f00209be174b8a3818
      - name: kind
        value: task
      resolver: bundles
    workspaces:
    - name: workspace
      workspace: workspace
  - name: rpms-signature-scan
    params:
    - name: image-url
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: image-digest
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    runAfter:
    - build-image-index
    taskRef:
      params:
      - name: name
        value: rpms-signature-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:1b6c20ab3dbfb0972803d3ebcb2fa72642e59400c77bd66dfd82028bdd09e120
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"

  ### Setup ephemeral namespace
  - name: deploy-ephemeral-namespace
    runAfter:
    - init
    taskRef:
      resolver: git
      params:
        - name: url
          value: https://github.com/konflux-ci/build-definitions.git
        - name: revision
          value: main
        - name: pathInRepo
          value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
    params:
      - name: ownerName
        value: $(context.pipelineRun.name)
      - name: ownerUid
        value: $(context.pipelineRun.uid)
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    - input: "$(params.ephemeral-namespace-run-script)$(params.goss-container-structure-test-file)"
      operator: notin
      values:
      - ""

  ### Container Structure Test
  - name: container-structure-test
    workspaces:
    - name: source
      workspace: workspace
    runAfter:
      - deploy-ephemeral-namespace
      - build-image-index
    params:
    - name: SCRIPT_PATH
      value: $(params.goss-container-structure-test-file)
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: SHELL_PATH
      value: $(params.container-shell-path)
    - name: POD_WAIT_TIMEOUT
      value: $(params.ephemeral-pod-wait-timeout)
    taskSpec:
      steps:
      - name: run-script
        image: registry.redhat.io/openshift4/ose-cli:$(params.ephemeral-namespace-oc-cli-version)
        workingDir: $(workspaces.source.path)/source
        env:
        - name: KUBECONFIG_VALUE
          valueFrom:
            secretKeyRef:
              name: "$(tasks.deploy-ephemeral-namespace.results.secretRef)"
              key: kubeconfig
        - name: SCRIPT_PATH
          value: $(params.goss-container-structure-test-file)
        - name: IMAGE_URL
          value: $(tasks.build-image-index.results.IMAGE_URL)
        - name: SHELL_PATH
          value: $(params.container-shell-path)
        - name: POD_WAIT_TIMEOUT
          value: $(params.ephemeral-pod-wait-timeout)
        script: |
          #!/usr/bin/env bash
          set -euo pipefail

          # Lets ensure a unique pod name - just to be safe
          POD_NAME="image-under-test-$(uuidgen)"

          # Expose KUBECONFIG for test namespace
          cat <<< "$KUBECONFIG_VALUE" > /tmp/cfg
          export KUBECONFIG=/tmp/cfg

          # Create pod definition at /tmp/pod.yaml
          cat > /tmp/pod.yaml <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: ${POD_NAME}
            labels:
              app: ${POD_NAME}
              env: ci
          spec:
            restartPolicy: Never
            containers:
            - name: app
              image: ${IMAGE_URL}
              # Lets make sure the pod doesnt do anything while under structure test
              command: ["${SHELL_PATH}"]
              args:
              - -c
              - "while true; do sleep 86400; done"
          EOF

          echo "Deploy ${IMAGE_URL}"
          oc apply -f /tmp/pod.yaml

          # TODO: goss should be prepaked in ci image
          echo ""
          echo "Get https://github.com/goss-org/goss"
          curl -L https://github.com/goss-org/goss/releases/download/v0.4.9/goss-linux-amd64 -o /tmp/goss
          chmod +x /tmp/goss

          echo ""
          echo "Wait for pod to be ready"
          oc wait --for=condition=Ready pod/${POD_NAME} --timeout=${POD_WAIT_TIMEOUT}

          echo ""
          echo "Upload goss to pod"
          # Cannot rely on oc cp as it requires tar - https://access.redhat.com/solutions/6993106
          base64 /tmp/goss | oc exec -i ${POD_NAME} -- ${SHELL_PATH} -c "base64 -d > /tmp/goss"
          oc exec -i ${POD_NAME} -- chmod +x /tmp/goss
          base64 ${SCRIPT_PATH} | oc exec -i ${POD_NAME} -- ${SHELL_PATH} -c "base64 -d > /tmp/goss.yaml"
          oc exec -i ${POD_NAME} -- cat /tmp/goss.yaml

          echo ""
          echo "Run goss validate"
          oc exec -i ${POD_NAME} -- /tmp/goss --gossfile /tmp/goss.yaml validate

          echo "Cleanup"
          oc delete pod ${POD_NAME}

    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    - input: $(params.goss-container-structure-test-file)
      operator: notin
      values:
      - ""

  ### Custom script run in ephemeral namespace
  - name: run-custom-script-in-ephemeral-namespace
    workspaces:
    - name: source
      workspace: workspace
    runAfter:
      - container-structure-test
      - build-image-index
    params:
    - name: SCRIPT_PATH
      value: $(params.ephemeral-namespace-run-script)
    - name: IMAGE_URL
      value: $(tasks.build-image-index.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-image-index.results.IMAGE_DIGEST)
    taskSpec:
      steps:
      - name: run-script
        image: registry.redhat.io/openshift4/ose-cli:$(params.ephemeral-namespace-oc-cli-version)
        workingDir: $(workspaces.source.path)/source
        env:
        - name: KUBECONFIG_VALUE
          valueFrom:
            secretKeyRef:
              name: "$(tasks.deploy-ephemeral-namespace.results.secretRef)"
              key: kubeconfig
        - name: SCRIPT_PATH
          value: $(params.ephemeral-namespace-run-script)
        - name: IMAGE_URL
          value: $(tasks.build-image-index.results.IMAGE_URL)
        - name: IMAGE_DIGEST
          value: $(tasks.build-image-index.results.IMAGE_DIGEST)
        script: |
          #!/usr/bin/env bash
          set -euo pipefail

          # Expose KUBECONFIG for test namespace
          cat <<< "$KUBECONFIG_VALUE" > /tmp/cfg
          export KUBECONFIG=/tmp/cfg

          echo "Running script ${SCRIPT_PATH}"
          chmod +x ./${SCRIPT_PATH}
          ./${SCRIPT_PATH}

    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    - input: $(params.ephemeral-namespace-run-script)
      operator: notin
      values:
      - ""
  workspaces:
  - name: workspace
  - name: git-auth
    optional: true
  - name: netrc
    optional: true
